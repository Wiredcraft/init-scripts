# MySQL Service

description     "MySQL Server"
author          "Mario Limonciello <superm1@ubuntu.com>"

start on runlevel [2345]
stop on starting rc RUNLEVEL=[016]

respawn
respawn limit 2 5

env HOME=/etc/mysql
umask 007

# The default of 5 seconds is too low for mysql which needs to flush buffers
kill timeout 300

pre-start script
    #Sanity checks
    [ -r $HOME/my.cnf ]
    [ -d /var/run/mysqld ] || install -m 755 -o mysql -g root -d /var/run/mysqld
    /lib/init/apparmor-profile-load usr.sbin.mysqld
    LC_ALL=C BLOCKSIZE= df --portability /var/lib/mysql/. | tail -n 1 | awk '{ exit ($4<4096) }'
end script

exec /usr/sbin/mysqld

post-start script
   for i in `seq 1 30` ; do
        /usr/bin/mysqladmin --defaults-file="${HOME}"/debian.cnf ping && {
            exec "${HOME}"/debian-start
            # should not reach this line
            exit 2
        }
        statusnow=`status`
        if echo $statusnow | grep -q 'stop/' ; then
            exit 0
        elif echo $statusnow | grep -q 'respawn/' ; then
            exit 1
        fi
        sleep 1
    done
    exit 1
end script

pre-stop script
    # Set innodb_max_dirty_pages_pct down to 0 to force flush of dirty pages
    MYSQL="/usr/bin/mysql --defaults-file=${HOME}/debian.cnf"
    $MYSQL -e 'SET GLOBAL innodb_max_dirty_pages_pct=0' || exit 1

    while [ 1 ] ; do
        dirty_pages=`$MYSQL -N -e "SHOW GLOBAL STATUS LIKE 'Innodb_buffer_pool_pages_dirty'" | /usr/bin/awk '{print $2}'`
        total_pages=`$MYSQL -N -e "SHOW GLOBAL STATUS LIKE 'Innodb_buffer_pool_pages_total'" | /usr/bin/awk '{print $2}'`
        
        # Dirty pages, even when aggressively pushed never really fall under 5-15%
        dirty_pages_perc=$(($dirty_pages*100/$total_pages))
        if [ $dirty_pages_perc -le 15 ]; then
            # less than 15% dirty pages, proceed with stop
            logger -is -t "mysql" "Curently ${dirty_pages_perc}% dirty pages (${dirty_pages} dirty vs. ${total_pages} total pages) - starting stop process..."
            exit 0
        else
            # more than 15% dirty pages, wait some more ...
            logger -is -t "mysql" "Still ${dirty_pages_perc}% dirty pages (${dirty_pages} dirty vs. ${total_pages} total pages) - waiting more..."
            sleep 5
        fi
    done
end script